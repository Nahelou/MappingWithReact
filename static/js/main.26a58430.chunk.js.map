{"version":3,"sources":["logo.svg","BarChart.js","BubbleChart.js","Charts.js","App.js","index.js"],"names":["module","exports","BarChart","data","ref","useRef","dataset","useEffect","d3","current","attr","style","draw","Object","values","i","dataToSort","sort","a","b","push","findLargest9","minValue","maxValue","color","domain","interpolate","range","selection","selectAll","yScale","window","innerHeight","transition","duration","d","enter","append","exit","remove","className","BubbleChart","props","radiusScale","value","fx","simulatePositions","simulation","nodes","velocityDecay","force","strength","v","on","mounted","setState","renderBubbles","item","useLabels","circles","_","index","key","r","cx","x","cy","y","fill","stroke","brighter","strokeWidth","transform","width","height","state","bind","this","length","React","Component","defaultProps","position","marginTop","right","datas","dataPerCountry","rawdata","Charts","features","forEach","f","country","properties","COUNTRY","MAPBOX_ACCESS_TOKEN","initialViewState","longitude","latitude","zoom","pitch","bearing","App","token","viewState","intensity","threshold","radiusPixels","layers","GeoJsonLayer","id","getRadius","getFillColor","onViewStateChange","viewport","WebMercatorViewport","nw","unproject","se","console","log","parameters","GL","DEPTH_TEST","BLEND","BLEND_SRC_RGB","ONE","BLEND_DST_RGB","BLEND_EQUATION","FUNC_ADD","HeatmapLayer","pickable","getPosition","geometry","coordinates","theshold","controller","mapStyle","preventStyleDiffing","mapboxApiAccessToken","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.26a58430.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import * as d3 from 'd3';\r\nimport React, { useRef, useEffect } from 'react';\r\n\r\n\r\nfunction BarChart({ data }){\r\n  \r\n    const ref = useRef();\r\n    const width = '30vw';\r\n    const height = '90vh';\r\n    let dataset = [];\r\n\r\n    function findLargest9(data){\r\n      let i=0;\r\n      let dataToSort = Object.values(data);\r\n      dataToSort.sort(function(a,b) {\r\n          if (a < b) { return 1; }\r\n          else if (a == b) { return 0; }\r\n          else { return -1; }\r\n      });\r\n      while(i<10){\r\n        dataset.push(dataToSort[i])\r\n        i++\r\n      }\r\n  }\r\n  \r\n\r\n    useEffect(() => {\r\n        const svg = d3.select(ref.current)\r\n            .attr(\"width\", width)\r\n            .attr(\"height\", height)\r\n            .style(\"position\", 'absolute')\r\n            .style(\"margin-top\", '5vh')\r\n            .style(\"right\", '0.5vw')\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        draw();\r\n    }, [Object.values(dataset)]);\r\n\r\n    const draw = () => {\r\n\r\n      findLargest9(data)\r\n\r\n      const minValue = d3.min(Object.values(dataset));\r\n\r\n      const maxValue = d3.max(Object.values(dataset));\r\n        \r\n      const color = d3\r\n      .scaleLinear()\r\n      .domain([minValue, maxValue])\r\n      .interpolate(d3.interpolateHcl)\r\n      .range([\"#fcc5c0\", \"#7a0177\"]);\r\n\r\n        const svg = d3.select(ref.current);\r\n        let selection = svg.selectAll(\"rect\").data(Object.values(dataset));\r\n        let yScale = d3.scaleLinear()\r\n                            .domain([0, d3.max(Object.values(dataset))])\r\n                            .range([0, window.innerHeight * 0.9 -100]);\r\n        \r\n        selection\r\n            .transition().duration(300)\r\n                .attr(\"height\", (d) => yScale(d))\r\n                .attr(\"y\", (d) => window.innerHeight * 0.9 - yScale(d))\r\n\r\n        selection\r\n            .enter()\r\n            .append(\"rect\")\r\n            .attr(\"x\", (d, i) => i * 45)\r\n            .attr(\"y\", (d) => window.innerHeight * 0.9)\r\n            .attr(\"width\", 40)\r\n            .attr(\"height\", 0)\r\n            .attr(\"fill\", (d) => color(d))\r\n            .transition().duration(300)\r\n                .attr(\"height\", (d) => yScale(d))\r\n                .attr(\"y\", (d) => window.innerHeight * 0.9 - yScale(d))\r\n        \r\n        selection\r\n            .exit()\r\n            .transition().duration(300)\r\n                .attr(\"y\", (d) => window.innerHeight * 0.9)\r\n                .attr(\"height\", 0)\r\n            .remove()\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"chart\">\r\n            <svg ref={ref}>\r\n            </svg>\r\n        </div>\r\n        \r\n    )\r\n\r\n}\r\n\r\nexport default BarChart;","import * as d3 from 'd3';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport * as _ from 'lodash';\r\n\r\nclass BubbleChart extends React.Component {\r\n    static propTypes = {\r\n        data: PropTypes.array,\r\n        width: PropTypes.number,\r\n        height: PropTypes.number,\r\n        useLabels: PropTypes.bool\r\n    };\r\n\r\n    static defaultProps = {\r\n        data: [],\r\n        useLabels: false,\r\n        width: 400,\r\n        height: 400,\r\n        style:{\r\n            position: 'absolute',\r\n            marginTop: '5vh',\r\n            right:'0.5vw',\r\n        }\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.minValue = 1;\r\n        this.maxValue = 100;\r\n        this.mounted = false;\r\n\r\n        this.state = {\r\n            data: []\r\n        };\r\n\r\n        this.radiusScale = this.radiusScale.bind(this);\r\n        this.simulatePositions = this.simulatePositions.bind(this);\r\n        this.renderBubbles = this.renderBubbles.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.data.length > 0) {\r\n            this.minValue =\r\n                0.95 *\r\n                d3.min(this.props.data, item => {\r\n                    return item.v;\r\n                });\r\n\r\n            this.maxValue =\r\n                1.05 *\r\n                d3.max(this.props.data, item => {\r\n                    return item.v;\r\n                });\r\n\r\n            this.simulatePositions(this.props.data);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n    radiusScale = value => {\r\n        const fx = d3\r\n            .scaleSqrt()\r\n            .range([1, 50])\r\n            .domain([this.minValue, this.maxValue]);\r\n\r\n        return fx(value);\r\n    };\r\n\r\n    simulatePositions = data => {\r\n        this.simulation = d3\r\n            .forceSimulation()\r\n            .nodes(data)\r\n            .velocityDecay(0.5)\r\n            .force(\"x\", d3.forceX().strength(0.05))\r\n            .force(\"y\", d3.forceY().strength(0.05))\r\n            .force(\r\n                \"collide\",\r\n                d3.forceCollide(d => {\r\n                    return this.radiusScale(d.v) + 2;\r\n                })\r\n            )\r\n            .on(\"tick\", () => {\r\n                if (this.mounted) {\r\n                    this.setState({ data });\r\n                }\r\n            });\r\n    };\r\n\r\n    renderBubbles = data => {\r\n        const minValue =\r\n            0.95 *\r\n            d3.min(data, item => {\r\n                return item.v;\r\n            });\r\n\r\n        const maxValue =\r\n            1.05 *\r\n            d3.max(data, item => {\r\n                return item.v;\r\n            });\r\n\r\n        const color = d3\r\n            .scaleLinear()\r\n            .domain([minValue, maxValue])\r\n            .interpolate(d3.interpolateHcl)\r\n            .range([\"#fcc5c0\", \"#7a0177\"]);\r\n\r\n        // render simple circle element\r\n        if (!this.props.useLabels) {\r\n            const circles = _.map(data, (item, index) => {\r\n                return (\r\n                    <circle\r\n                        key={index}\r\n                        r={this.radiusScale(item.v)}\r\n                        cx={item.x}\r\n                        cy={item.y}\r\n                        fill={color(item.v)}\r\n                        stroke={d3.rgb(color(item.v)).brighter(2)}\r\n                        strokeWidth=\"2\"\r\n                    />\r\n                );\r\n            });\r\n\r\n            return (\r\n                <g\r\n                    transform={`translate(${this.props.width / 2}, ${this.props\r\n                        .height / 2})`}\r\n                >\r\n                    {circles}\r\n                </g>\r\n            );\r\n        }\r\n\r\n        const texts = _.map(data, (item, index) => {\r\n            const props = this.props;\r\n            const fontSize = this.radiusScale(item.v) / 2;\r\n            return (\r\n                <g\r\n                    key={index}\r\n                    transform={`translate(${props.width / 2 +\r\n                        item.x}, ${props.height / 2 + item.y})`}\r\n                >\r\n                    <circle\r\n                        r={this.radiusScale(item.v)}\r\n                        fill={color(item.v)}\r\n                        stroke={d3.rgb(color(item.v)).brighter(2)}\r\n                        strokeWidth=\"2\"\r\n                    />\r\n                    {/* <text\r\n                        dy=\"6\"\r\n                        fill=\"#fff\"\r\n                        textAnchor=\"middle\"\r\n                        fontSize={`${fontSize}px`}\r\n                        fontWeight=\"bold\"\r\n                    >\r\n                        {item.v}\r\n                    </text> */}\r\n                </g>\r\n            );\r\n        });\r\n\r\n        return texts;\r\n    };\r\n\r\n    render() {\r\n        if (this.state.data.length) {\r\n            return (\r\n                <svg width={this.props.width} height={this.props.height} style={this.props.style}>\r\n                    {this.renderBubbles(this.state.data)}\r\n                </svg>\r\n            );\r\n        }\r\n\r\n        return <div>Loading</div>;\r\n    }\r\n}\r\n\r\n\r\nexport default BubbleChart;","// App.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport BarChart from './BarChart';\r\nimport BubbleChart from './BubbleChart';\r\nimport dataset from './data/tweets_simplify.json';\r\nimport * as _ from 'lodash';\r\n\r\nconst datas = dataset;\r\nlet dataPerCountry = [];\r\nvar i = 0;\r\n\r\nconst rawdata = _.map(_.range(24), () => {\r\n  return {\r\n      v: _.random(10, 100)\r\n  };\r\n});\r\n\r\nfunction cleanData(data){\r\n    data.features.forEach((f)=>{\r\n      let country = f.properties.COUNTRY;\r\n      if(!dataPerCountry[country] && country !== 'France'){\r\n        dataPerCountry[country] = 1;\r\n      }\r\n      else if(country !== 'France'){\r\n        dataPerCountry[country] = dataPerCountry[country] + 1\r\n      }\r\n    })\r\n\r\n}\r\nfunction Charts() {\r\n    cleanData(datas);\r\n    return (\r\n        <div className=\"Charts\">\r\n            <BarChart data={dataPerCountry} />\r\n            <BubbleChart useLabels data={rawdata} />\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default Charts;","import React, {PureComponent} from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport DeckGL from '@deck.gl/react';\r\nimport {WebMercatorViewport} from '@deck.gl/core';\r\nimport GL from '@luma.gl/constants';\r\nimport {GeoJsonLayer} from '@deck.gl/layers';\r\nimport {HeatmapLayer} from '@deck.gl/aggregation-layers';\r\nimport {StaticMap} from 'react-map-gl';\r\nimport data from './data/tweets_simplify.json';\r\n\r\n\r\n\r\nconst MAPBOX_ACCESS_TOKEN = 'pk.eyJ1IjoibmFoZWxvdSIsImEiOiJjazUxOG9yNDcwcDUyM3NtaTVzMnd5ejdrIn0.hFTRn-SVqOhufKAcRCnYLA';\r\n\r\nconst initialViewState = {\r\n  longitude: -1.549780,\r\n  latitude: 47.216241,\r\n  zoom: 5,\r\n  pitch: 0,\r\n  bearing: 0\r\n};\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = { data: data,\r\n       token: MAPBOX_ACCESS_TOKEN,\r\n       viewState:initialViewState,\r\n       intensity: 5,\r\n       threshold: 0.05,\r\n       radiusPixels: 100,\r\n       style: {\r\n         height:'95vh',\r\n         width:'67vw',\r\n         marginTop:'5vh'\r\n       }\r\n      };\r\n  }\r\n\r\n\r\n  async componentDidMount() {\r\n  }\r\n\r\n  render() {\r\n    const layers = [\r\n      new GeoJsonLayer({\r\n        id: 'point-layer',\r\n        data:this.state.data,\r\n        getRadius: 3000,\r\n        getFillColor: [240, 60, 200],\r\n        onViewStateChange: ({viewState}) => {\r\n          const viewport = new WebMercatorViewport(viewState);\r\n          const nw = viewport.unproject([0, 0]);\r\n          const se = viewport.unproject([viewport.width, viewport.height]);\r\n          console.log(\"north: \", nw[1], \", south: \", se[1]);\r\n          console.log(\"east: \", se[0], \"west: \", nw[0] );\r\n        },\r\n        parameters: {\r\n          [GL.DEPTH_TEST]: false,\r\n          [GL.BLEND]: true,\r\n          [GL.BLEND_SRC_RGB]: GL.ONE,\r\n          [GL.BLEND_DST_RGB]: GL.ONE,\r\n          [GL.BLEND_EQUATION]: GL.FUNC_ADD,\r\n        }\r\n      }),\r\n      new HeatmapLayer({\r\n        data:this.state.data,\r\n        id: 'heatmp-layer',\r\n        pickable: false,\r\n        getPosition: d => [d.geometry.coordinates[1], d.geometry.coordinates[0]],\r\n        intensity:this.state.intensity,\r\n        theshold:this.state.threshold,\r\n        radiusPixels:this.state.radiusPixels\r\n      })\r\n    ];\r\n\r\n    return (\r\n      <DeckGL\r\n        key=\"0\"\r\n        initialViewState={this.state.viewState}\r\n        controller={true}\r\n        layers={layers}\r\n        style={this.state.style}\r\n      >\r\n        <StaticMap\r\n          key=\"1\"\r\n          mapStyle={'mapbox://styles/mapbox/dark-v9'}\r\n          preventStyleDiffing={true}\r\n          mapboxApiAccessToken={this.state.token} />\r\n      </DeckGL>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport AppBis from './Charts';\r\nimport App from './App';\r\nimport BubbleChart from './BubbleChart';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('map'));\r\nReactDOM.render(<AppBis />, document.getElementById('charts'));\r\n\r\n// ReactDOM.render(<BarChart />, document.getElementById('charts'));\r\n// serviceWorker.unregister();"],"sourceRoot":""}